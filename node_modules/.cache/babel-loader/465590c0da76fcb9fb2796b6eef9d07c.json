{"ast":null,"code":"import _slicedToArray from\"/home/andras/Desktop/React_3/pet-shop-v3-cra/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';var PetComponent=function PetComponent(props){// useState is a Hook function that will give back an array\n// The array contains a primitive variable or an object\n// depending how we initialize it\n// and also will give back a function to update the state.\n// (the primitive variable or an object).\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),petsReceived=_useState2[0],setPetsReceived=_useState2[1];var pet_fun=function pet_fun(event){console.log(event);// Synthetic event\nconsole.log(event.target);event.target.style[\"backgroundColor\"]=props.color;//event.target.style.color = \"white\";\nsetPetsReceived(petsReceived+1);// *** Lifting State ***\nconsole.log(props);props.infoToParent(\"=> This is a string message from the pet!!!\");props.infoToParent([{animal:'dog'},{animal:'Rabbit'}]);props.infoToParent(props.species);props.infoToParent(\"* \".concat(props.noise,\" -> The \").concat(props.species,\" has been petted \").concat(petsReceived,\" time(s)\"));};return React.createElement(\"fieldset\",null,React.createElement(\"legend\",null,\" \",props.species,\" \"),React.createElement(\"button\",{onClick:pet_fun},\"Pet the \",props.species));};// PetComponent functional component ***\nexport default PetComponent;","map":{"version":3,"sources":["/home/andras/Desktop/React_3/pet-shop-v3-cra/src/components/PetComponent.js"],"names":["React","useState","PetComponent","props","petsReceived","setPetsReceived","pet_fun","event","console","log","target","style","color","infoToParent","animal","species","noise"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CAIA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,KAAK,CAAI,CAE5B;AACA;AACA;AACA;AACA;AAN4B,cAQYF,QAAQ,CAAC,CAAD,CARpB,wCAQrBG,YARqB,eAQPC,eARO,eAW5B,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAAC,KAAK,CAAI,CACvBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAA4B;AAC5BC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB,EACAH,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,iBAAnB,EAAyCR,KAAK,CAACS,KAA/C,CACA;AAEAP,eAAe,CAAED,YAAY,CAAG,CAAjB,CAAf,CAEA;AACAI,OAAO,CAACC,GAAR,CAAYN,KAAZ,EACAA,KAAK,CAACU,YAAN,CAAmB,6CAAnB,EACAV,KAAK,CAACU,YAAN,CAAoB,CAAE,CAACC,MAAM,CAAC,KAAR,CAAF,CAAkB,CAAEA,MAAM,CAAE,QAAV,CAAlB,CAApB,EACAX,KAAK,CAACU,YAAN,CAAmBV,KAAK,CAACY,OAAzB,EACAZ,KAAK,CAACU,YAAN,aAAwBV,KAAK,CAACa,KAA9B,oBAA8Cb,KAAK,CAACY,OAApD,6BAA+EX,YAA/E,cACD,CAdD,CAkBA,MAEE,qCACE,sCAAWD,KAAK,CAACY,OAAjB,KADF,CAEE,8BAAQ,OAAO,CAAGT,OAAlB,aAAuCH,KAAK,CAACY,OAA7C,CAFF,CAFF,CASD,CAtCD,CAsCE;AAGF,cAAeb,CAAAA,YAAf","sourcesContent":["import React, {useState} from 'react';\n\n\n\nconst PetComponent = props => {\n\n  // useState is a Hook function that will give back an array\n  // The array contains a primitive variable or an object\n  // depending how we initialize it\n  // and also will give back a function to update the state.\n  // (the primitive variable or an object).\n\n  const [petsReceived, setPetsReceived] = useState(1);\n\n \n  const pet_fun = event => {\n    console.log(event);         // Synthetic event\n    console.log(event.target);\n    event.target.style[\"backgroundColor\"] =  props.color ;\n    //event.target.style.color = \"white\";\n\n    setPetsReceived( petsReceived + 1);\n\n    // *** Lifting State ***\n    console.log(props);\n    props.infoToParent(\"=> This is a string message from the pet!!!\");\n    props.infoToParent( [ {animal:'dog'}, { animal: 'Rabbit'} ] );    \n    props.infoToParent(props.species);\n    props.infoToParent(`* ${props.noise} -> The ${props.species} has been petted ${petsReceived} time(s)`);\n  }\n\n\n\n  return(\n\n    <fieldset>\n      <legend> { props.species } </legend>\n      <button onClick={ pet_fun  }>Pet the { props.species }</button>\n    </fieldset>\n  \n  );\n\n} // PetComponent functional component ***\n\n\nexport default PetComponent;\n\n"]},"metadata":{},"sourceType":"module"}